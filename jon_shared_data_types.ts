// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.7
//   protoc               v5.29.2
// source: jon_shared_data_types.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import Long from "long";

export enum JonGuiDataVideoChannelHeatFilters {
  JON_GUI_DATA_VIDEO_CHANNEL_HEAT_FILTER_UNSPECIFIED = 0,
  JON_GUI_DATA_VIDEO_CHANNEL_HEAT_FILTER_HOT_WHITE = 1,
  JON_GUI_DATA_VIDEO_CHANNEL_HEAT_FILTER_HOT_BLACK = 2,
  JON_GUI_DATA_VIDEO_CHANNEL_HEAT_FILTER_SEPIA = 3,
  JON_GUI_DATA_VIDEO_CHANNEL_HEAT_FILTER_SEPIA_INVERSE = 4,
  UNRECOGNIZED = -1,
}

export function jonGuiDataVideoChannelHeatFiltersFromJSON(object: any): JonGuiDataVideoChannelHeatFilters {
  switch (object) {
    case 0:
    case "JON_GUI_DATA_VIDEO_CHANNEL_HEAT_FILTER_UNSPECIFIED":
      return JonGuiDataVideoChannelHeatFilters.JON_GUI_DATA_VIDEO_CHANNEL_HEAT_FILTER_UNSPECIFIED;
    case 1:
    case "JON_GUI_DATA_VIDEO_CHANNEL_HEAT_FILTER_HOT_WHITE":
      return JonGuiDataVideoChannelHeatFilters.JON_GUI_DATA_VIDEO_CHANNEL_HEAT_FILTER_HOT_WHITE;
    case 2:
    case "JON_GUI_DATA_VIDEO_CHANNEL_HEAT_FILTER_HOT_BLACK":
      return JonGuiDataVideoChannelHeatFilters.JON_GUI_DATA_VIDEO_CHANNEL_HEAT_FILTER_HOT_BLACK;
    case 3:
    case "JON_GUI_DATA_VIDEO_CHANNEL_HEAT_FILTER_SEPIA":
      return JonGuiDataVideoChannelHeatFilters.JON_GUI_DATA_VIDEO_CHANNEL_HEAT_FILTER_SEPIA;
    case 4:
    case "JON_GUI_DATA_VIDEO_CHANNEL_HEAT_FILTER_SEPIA_INVERSE":
      return JonGuiDataVideoChannelHeatFilters.JON_GUI_DATA_VIDEO_CHANNEL_HEAT_FILTER_SEPIA_INVERSE;
    case -1:
    case "UNRECOGNIZED":
    default:
      return JonGuiDataVideoChannelHeatFilters.UNRECOGNIZED;
  }
}

export function jonGuiDataVideoChannelHeatFiltersToJSON(object: JonGuiDataVideoChannelHeatFilters): string {
  switch (object) {
    case JonGuiDataVideoChannelHeatFilters.JON_GUI_DATA_VIDEO_CHANNEL_HEAT_FILTER_UNSPECIFIED:
      return "JON_GUI_DATA_VIDEO_CHANNEL_HEAT_FILTER_UNSPECIFIED";
    case JonGuiDataVideoChannelHeatFilters.JON_GUI_DATA_VIDEO_CHANNEL_HEAT_FILTER_HOT_WHITE:
      return "JON_GUI_DATA_VIDEO_CHANNEL_HEAT_FILTER_HOT_WHITE";
    case JonGuiDataVideoChannelHeatFilters.JON_GUI_DATA_VIDEO_CHANNEL_HEAT_FILTER_HOT_BLACK:
      return "JON_GUI_DATA_VIDEO_CHANNEL_HEAT_FILTER_HOT_BLACK";
    case JonGuiDataVideoChannelHeatFilters.JON_GUI_DATA_VIDEO_CHANNEL_HEAT_FILTER_SEPIA:
      return "JON_GUI_DATA_VIDEO_CHANNEL_HEAT_FILTER_SEPIA";
    case JonGuiDataVideoChannelHeatFilters.JON_GUI_DATA_VIDEO_CHANNEL_HEAT_FILTER_SEPIA_INVERSE:
      return "JON_GUI_DATA_VIDEO_CHANNEL_HEAT_FILTER_SEPIA_INVERSE";
    case JonGuiDataVideoChannelHeatFilters.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export enum JonGuiDataVideoChannelHeatAGCModes {
  JON_GUI_DATA_VIDEO_CHANNEL_HEAT_AGC_MODE_UNSPECIFIED = 0,
  JON_GUI_DATA_VIDEO_CHANNEL_HEAT_AGC_MODE_1 = 1,
  JON_GUI_DATA_VIDEO_CHANNEL_HEAT_AGC_MODE_2 = 2,
  JON_GUI_DATA_VIDEO_CHANNEL_HEAT_AGC_MODE_3 = 3,
  UNRECOGNIZED = -1,
}

export function jonGuiDataVideoChannelHeatAGCModesFromJSON(object: any): JonGuiDataVideoChannelHeatAGCModes {
  switch (object) {
    case 0:
    case "JON_GUI_DATA_VIDEO_CHANNEL_HEAT_AGC_MODE_UNSPECIFIED":
      return JonGuiDataVideoChannelHeatAGCModes.JON_GUI_DATA_VIDEO_CHANNEL_HEAT_AGC_MODE_UNSPECIFIED;
    case 1:
    case "JON_GUI_DATA_VIDEO_CHANNEL_HEAT_AGC_MODE_1":
      return JonGuiDataVideoChannelHeatAGCModes.JON_GUI_DATA_VIDEO_CHANNEL_HEAT_AGC_MODE_1;
    case 2:
    case "JON_GUI_DATA_VIDEO_CHANNEL_HEAT_AGC_MODE_2":
      return JonGuiDataVideoChannelHeatAGCModes.JON_GUI_DATA_VIDEO_CHANNEL_HEAT_AGC_MODE_2;
    case 3:
    case "JON_GUI_DATA_VIDEO_CHANNEL_HEAT_AGC_MODE_3":
      return JonGuiDataVideoChannelHeatAGCModes.JON_GUI_DATA_VIDEO_CHANNEL_HEAT_AGC_MODE_3;
    case -1:
    case "UNRECOGNIZED":
    default:
      return JonGuiDataVideoChannelHeatAGCModes.UNRECOGNIZED;
  }
}

export function jonGuiDataVideoChannelHeatAGCModesToJSON(object: JonGuiDataVideoChannelHeatAGCModes): string {
  switch (object) {
    case JonGuiDataVideoChannelHeatAGCModes.JON_GUI_DATA_VIDEO_CHANNEL_HEAT_AGC_MODE_UNSPECIFIED:
      return "JON_GUI_DATA_VIDEO_CHANNEL_HEAT_AGC_MODE_UNSPECIFIED";
    case JonGuiDataVideoChannelHeatAGCModes.JON_GUI_DATA_VIDEO_CHANNEL_HEAT_AGC_MODE_1:
      return "JON_GUI_DATA_VIDEO_CHANNEL_HEAT_AGC_MODE_1";
    case JonGuiDataVideoChannelHeatAGCModes.JON_GUI_DATA_VIDEO_CHANNEL_HEAT_AGC_MODE_2:
      return "JON_GUI_DATA_VIDEO_CHANNEL_HEAT_AGC_MODE_2";
    case JonGuiDataVideoChannelHeatAGCModes.JON_GUI_DATA_VIDEO_CHANNEL_HEAT_AGC_MODE_3:
      return "JON_GUI_DATA_VIDEO_CHANNEL_HEAT_AGC_MODE_3";
    case JonGuiDataVideoChannelHeatAGCModes.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export enum JonGuiDataGpsUnits {
  JON_GUI_DATA_GPS_UNITS_UNSPECIFIED = 0,
  JON_GUI_DATA_GPS_UNITS_DECIMAL_DEGREES = 1,
  JON_GUI_DATA_GPS_UNITS_DEGREES_MINUTES_SECONDS = 2,
  JON_GUI_DATA_GPS_UNITS_DEGREES_DECIMAL_MINUTES = 3,
  UNRECOGNIZED = -1,
}

export function jonGuiDataGpsUnitsFromJSON(object: any): JonGuiDataGpsUnits {
  switch (object) {
    case 0:
    case "JON_GUI_DATA_GPS_UNITS_UNSPECIFIED":
      return JonGuiDataGpsUnits.JON_GUI_DATA_GPS_UNITS_UNSPECIFIED;
    case 1:
    case "JON_GUI_DATA_GPS_UNITS_DECIMAL_DEGREES":
      return JonGuiDataGpsUnits.JON_GUI_DATA_GPS_UNITS_DECIMAL_DEGREES;
    case 2:
    case "JON_GUI_DATA_GPS_UNITS_DEGREES_MINUTES_SECONDS":
      return JonGuiDataGpsUnits.JON_GUI_DATA_GPS_UNITS_DEGREES_MINUTES_SECONDS;
    case 3:
    case "JON_GUI_DATA_GPS_UNITS_DEGREES_DECIMAL_MINUTES":
      return JonGuiDataGpsUnits.JON_GUI_DATA_GPS_UNITS_DEGREES_DECIMAL_MINUTES;
    case -1:
    case "UNRECOGNIZED":
    default:
      return JonGuiDataGpsUnits.UNRECOGNIZED;
  }
}

export function jonGuiDataGpsUnitsToJSON(object: JonGuiDataGpsUnits): string {
  switch (object) {
    case JonGuiDataGpsUnits.JON_GUI_DATA_GPS_UNITS_UNSPECIFIED:
      return "JON_GUI_DATA_GPS_UNITS_UNSPECIFIED";
    case JonGuiDataGpsUnits.JON_GUI_DATA_GPS_UNITS_DECIMAL_DEGREES:
      return "JON_GUI_DATA_GPS_UNITS_DECIMAL_DEGREES";
    case JonGuiDataGpsUnits.JON_GUI_DATA_GPS_UNITS_DEGREES_MINUTES_SECONDS:
      return "JON_GUI_DATA_GPS_UNITS_DEGREES_MINUTES_SECONDS";
    case JonGuiDataGpsUnits.JON_GUI_DATA_GPS_UNITS_DEGREES_DECIMAL_MINUTES:
      return "JON_GUI_DATA_GPS_UNITS_DEGREES_DECIMAL_MINUTES";
    case JonGuiDataGpsUnits.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export enum JonGuiDataGpsFixType {
  JON_GUI_DATA_GPS_FIX_TYPE_UNSPECIFIED = 0,
  JON_GUI_DATA_GPS_FIX_TYPE_NONE = 1,
  JON_GUI_DATA_GPS_FIX_TYPE_1D = 2,
  JON_GUI_DATA_GPS_FIX_TYPE_2D = 3,
  JON_GUI_DATA_GPS_FIX_TYPE_3D = 4,
  JON_GUI_DATA_GPS_FIX_TYPE_MANUAL = 5,
  UNRECOGNIZED = -1,
}

export function jonGuiDataGpsFixTypeFromJSON(object: any): JonGuiDataGpsFixType {
  switch (object) {
    case 0:
    case "JON_GUI_DATA_GPS_FIX_TYPE_UNSPECIFIED":
      return JonGuiDataGpsFixType.JON_GUI_DATA_GPS_FIX_TYPE_UNSPECIFIED;
    case 1:
    case "JON_GUI_DATA_GPS_FIX_TYPE_NONE":
      return JonGuiDataGpsFixType.JON_GUI_DATA_GPS_FIX_TYPE_NONE;
    case 2:
    case "JON_GUI_DATA_GPS_FIX_TYPE_1D":
      return JonGuiDataGpsFixType.JON_GUI_DATA_GPS_FIX_TYPE_1D;
    case 3:
    case "JON_GUI_DATA_GPS_FIX_TYPE_2D":
      return JonGuiDataGpsFixType.JON_GUI_DATA_GPS_FIX_TYPE_2D;
    case 4:
    case "JON_GUI_DATA_GPS_FIX_TYPE_3D":
      return JonGuiDataGpsFixType.JON_GUI_DATA_GPS_FIX_TYPE_3D;
    case 5:
    case "JON_GUI_DATA_GPS_FIX_TYPE_MANUAL":
      return JonGuiDataGpsFixType.JON_GUI_DATA_GPS_FIX_TYPE_MANUAL;
    case -1:
    case "UNRECOGNIZED":
    default:
      return JonGuiDataGpsFixType.UNRECOGNIZED;
  }
}

export function jonGuiDataGpsFixTypeToJSON(object: JonGuiDataGpsFixType): string {
  switch (object) {
    case JonGuiDataGpsFixType.JON_GUI_DATA_GPS_FIX_TYPE_UNSPECIFIED:
      return "JON_GUI_DATA_GPS_FIX_TYPE_UNSPECIFIED";
    case JonGuiDataGpsFixType.JON_GUI_DATA_GPS_FIX_TYPE_NONE:
      return "JON_GUI_DATA_GPS_FIX_TYPE_NONE";
    case JonGuiDataGpsFixType.JON_GUI_DATA_GPS_FIX_TYPE_1D:
      return "JON_GUI_DATA_GPS_FIX_TYPE_1D";
    case JonGuiDataGpsFixType.JON_GUI_DATA_GPS_FIX_TYPE_2D:
      return "JON_GUI_DATA_GPS_FIX_TYPE_2D";
    case JonGuiDataGpsFixType.JON_GUI_DATA_GPS_FIX_TYPE_3D:
      return "JON_GUI_DATA_GPS_FIX_TYPE_3D";
    case JonGuiDataGpsFixType.JON_GUI_DATA_GPS_FIX_TYPE_MANUAL:
      return "JON_GUI_DATA_GPS_FIX_TYPE_MANUAL";
    case JonGuiDataGpsFixType.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export enum JonGuiDataCompassUnits {
  JON_GUI_DATA_COMPASS_UNITS_UNSPECIFIED = 0,
  JON_GUI_DATA_COMPASS_UNITS_DEGREES = 1,
  JON_GUI_DATA_COMPASS_UNITS_MILS = 2,
  JON_GUI_DATA_COMPASS_UNITS_GRAD = 3,
  JON_GUI_DATA_COMPASS_UNITS_MRAD = 4,
  UNRECOGNIZED = -1,
}

export function jonGuiDataCompassUnitsFromJSON(object: any): JonGuiDataCompassUnits {
  switch (object) {
    case 0:
    case "JON_GUI_DATA_COMPASS_UNITS_UNSPECIFIED":
      return JonGuiDataCompassUnits.JON_GUI_DATA_COMPASS_UNITS_UNSPECIFIED;
    case 1:
    case "JON_GUI_DATA_COMPASS_UNITS_DEGREES":
      return JonGuiDataCompassUnits.JON_GUI_DATA_COMPASS_UNITS_DEGREES;
    case 2:
    case "JON_GUI_DATA_COMPASS_UNITS_MILS":
      return JonGuiDataCompassUnits.JON_GUI_DATA_COMPASS_UNITS_MILS;
    case 3:
    case "JON_GUI_DATA_COMPASS_UNITS_GRAD":
      return JonGuiDataCompassUnits.JON_GUI_DATA_COMPASS_UNITS_GRAD;
    case 4:
    case "JON_GUI_DATA_COMPASS_UNITS_MRAD":
      return JonGuiDataCompassUnits.JON_GUI_DATA_COMPASS_UNITS_MRAD;
    case -1:
    case "UNRECOGNIZED":
    default:
      return JonGuiDataCompassUnits.UNRECOGNIZED;
  }
}

export function jonGuiDataCompassUnitsToJSON(object: JonGuiDataCompassUnits): string {
  switch (object) {
    case JonGuiDataCompassUnits.JON_GUI_DATA_COMPASS_UNITS_UNSPECIFIED:
      return "JON_GUI_DATA_COMPASS_UNITS_UNSPECIFIED";
    case JonGuiDataCompassUnits.JON_GUI_DATA_COMPASS_UNITS_DEGREES:
      return "JON_GUI_DATA_COMPASS_UNITS_DEGREES";
    case JonGuiDataCompassUnits.JON_GUI_DATA_COMPASS_UNITS_MILS:
      return "JON_GUI_DATA_COMPASS_UNITS_MILS";
    case JonGuiDataCompassUnits.JON_GUI_DATA_COMPASS_UNITS_GRAD:
      return "JON_GUI_DATA_COMPASS_UNITS_GRAD";
    case JonGuiDataCompassUnits.JON_GUI_DATA_COMPASS_UNITS_MRAD:
      return "JON_GUI_DATA_COMPASS_UNITS_MRAD";
    case JonGuiDataCompassUnits.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export enum JonGuiDataAccumulatorStateIdx {
  JON_GUI_DATA_ACCUMULATOR_STATE_UNSPECIFIED = 0,
  JON_GUI_DATA_ACCUMULATOR_STATE_UNKNOWN = 1,
  JON_GUI_DATA_ACCUMULATOR_STATE_EMPTY = 2,
  JON_GUI_DATA_ACCUMULATOR_STATE_1 = 3,
  JON_GUI_DATA_ACCUMULATOR_STATE_2 = 4,
  JON_GUI_DATA_ACCUMULATOR_STATE_3 = 5,
  JON_GUI_DATA_ACCUMULATOR_STATE_4 = 6,
  JON_GUI_DATA_ACCUMULATOR_STATE_5 = 7,
  JON_GUI_DATA_ACCUMULATOR_STATE_6 = 8,
  JON_GUI_DATA_ACCUMULATOR_STATE_FULL = 9,
  JON_GUI_DATA_ACCUMULATOR_STATE_CHARGING = 10,
  UNRECOGNIZED = -1,
}

export function jonGuiDataAccumulatorStateIdxFromJSON(object: any): JonGuiDataAccumulatorStateIdx {
  switch (object) {
    case 0:
    case "JON_GUI_DATA_ACCUMULATOR_STATE_UNSPECIFIED":
      return JonGuiDataAccumulatorStateIdx.JON_GUI_DATA_ACCUMULATOR_STATE_UNSPECIFIED;
    case 1:
    case "JON_GUI_DATA_ACCUMULATOR_STATE_UNKNOWN":
      return JonGuiDataAccumulatorStateIdx.JON_GUI_DATA_ACCUMULATOR_STATE_UNKNOWN;
    case 2:
    case "JON_GUI_DATA_ACCUMULATOR_STATE_EMPTY":
      return JonGuiDataAccumulatorStateIdx.JON_GUI_DATA_ACCUMULATOR_STATE_EMPTY;
    case 3:
    case "JON_GUI_DATA_ACCUMULATOR_STATE_1":
      return JonGuiDataAccumulatorStateIdx.JON_GUI_DATA_ACCUMULATOR_STATE_1;
    case 4:
    case "JON_GUI_DATA_ACCUMULATOR_STATE_2":
      return JonGuiDataAccumulatorStateIdx.JON_GUI_DATA_ACCUMULATOR_STATE_2;
    case 5:
    case "JON_GUI_DATA_ACCUMULATOR_STATE_3":
      return JonGuiDataAccumulatorStateIdx.JON_GUI_DATA_ACCUMULATOR_STATE_3;
    case 6:
    case "JON_GUI_DATA_ACCUMULATOR_STATE_4":
      return JonGuiDataAccumulatorStateIdx.JON_GUI_DATA_ACCUMULATOR_STATE_4;
    case 7:
    case "JON_GUI_DATA_ACCUMULATOR_STATE_5":
      return JonGuiDataAccumulatorStateIdx.JON_GUI_DATA_ACCUMULATOR_STATE_5;
    case 8:
    case "JON_GUI_DATA_ACCUMULATOR_STATE_6":
      return JonGuiDataAccumulatorStateIdx.JON_GUI_DATA_ACCUMULATOR_STATE_6;
    case 9:
    case "JON_GUI_DATA_ACCUMULATOR_STATE_FULL":
      return JonGuiDataAccumulatorStateIdx.JON_GUI_DATA_ACCUMULATOR_STATE_FULL;
    case 10:
    case "JON_GUI_DATA_ACCUMULATOR_STATE_CHARGING":
      return JonGuiDataAccumulatorStateIdx.JON_GUI_DATA_ACCUMULATOR_STATE_CHARGING;
    case -1:
    case "UNRECOGNIZED":
    default:
      return JonGuiDataAccumulatorStateIdx.UNRECOGNIZED;
  }
}

export function jonGuiDataAccumulatorStateIdxToJSON(object: JonGuiDataAccumulatorStateIdx): string {
  switch (object) {
    case JonGuiDataAccumulatorStateIdx.JON_GUI_DATA_ACCUMULATOR_STATE_UNSPECIFIED:
      return "JON_GUI_DATA_ACCUMULATOR_STATE_UNSPECIFIED";
    case JonGuiDataAccumulatorStateIdx.JON_GUI_DATA_ACCUMULATOR_STATE_UNKNOWN:
      return "JON_GUI_DATA_ACCUMULATOR_STATE_UNKNOWN";
    case JonGuiDataAccumulatorStateIdx.JON_GUI_DATA_ACCUMULATOR_STATE_EMPTY:
      return "JON_GUI_DATA_ACCUMULATOR_STATE_EMPTY";
    case JonGuiDataAccumulatorStateIdx.JON_GUI_DATA_ACCUMULATOR_STATE_1:
      return "JON_GUI_DATA_ACCUMULATOR_STATE_1";
    case JonGuiDataAccumulatorStateIdx.JON_GUI_DATA_ACCUMULATOR_STATE_2:
      return "JON_GUI_DATA_ACCUMULATOR_STATE_2";
    case JonGuiDataAccumulatorStateIdx.JON_GUI_DATA_ACCUMULATOR_STATE_3:
      return "JON_GUI_DATA_ACCUMULATOR_STATE_3";
    case JonGuiDataAccumulatorStateIdx.JON_GUI_DATA_ACCUMULATOR_STATE_4:
      return "JON_GUI_DATA_ACCUMULATOR_STATE_4";
    case JonGuiDataAccumulatorStateIdx.JON_GUI_DATA_ACCUMULATOR_STATE_5:
      return "JON_GUI_DATA_ACCUMULATOR_STATE_5";
    case JonGuiDataAccumulatorStateIdx.JON_GUI_DATA_ACCUMULATOR_STATE_6:
      return "JON_GUI_DATA_ACCUMULATOR_STATE_6";
    case JonGuiDataAccumulatorStateIdx.JON_GUI_DATA_ACCUMULATOR_STATE_FULL:
      return "JON_GUI_DATA_ACCUMULATOR_STATE_FULL";
    case JonGuiDataAccumulatorStateIdx.JON_GUI_DATA_ACCUMULATOR_STATE_CHARGING:
      return "JON_GUI_DATA_ACCUMULATOR_STATE_CHARGING";
    case JonGuiDataAccumulatorStateIdx.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export enum JonGuiDataTimeFormats {
  JON_GUI_DATA_TIME_FORMAT_UNSPECIFIED = 0,
  JON_GUI_DATA_TIME_FORMAT_H_M_S = 1,
  JON_GUI_DATA_TIME_FORMAT_Y_m_D_H_M_S = 2,
  UNRECOGNIZED = -1,
}

export function jonGuiDataTimeFormatsFromJSON(object: any): JonGuiDataTimeFormats {
  switch (object) {
    case 0:
    case "JON_GUI_DATA_TIME_FORMAT_UNSPECIFIED":
      return JonGuiDataTimeFormats.JON_GUI_DATA_TIME_FORMAT_UNSPECIFIED;
    case 1:
    case "JON_GUI_DATA_TIME_FORMAT_H_M_S":
      return JonGuiDataTimeFormats.JON_GUI_DATA_TIME_FORMAT_H_M_S;
    case 2:
    case "JON_GUI_DATA_TIME_FORMAT_Y_m_D_H_M_S":
      return JonGuiDataTimeFormats.JON_GUI_DATA_TIME_FORMAT_Y_m_D_H_M_S;
    case -1:
    case "UNRECOGNIZED":
    default:
      return JonGuiDataTimeFormats.UNRECOGNIZED;
  }
}

export function jonGuiDataTimeFormatsToJSON(object: JonGuiDataTimeFormats): string {
  switch (object) {
    case JonGuiDataTimeFormats.JON_GUI_DATA_TIME_FORMAT_UNSPECIFIED:
      return "JON_GUI_DATA_TIME_FORMAT_UNSPECIFIED";
    case JonGuiDataTimeFormats.JON_GUI_DATA_TIME_FORMAT_H_M_S:
      return "JON_GUI_DATA_TIME_FORMAT_H_M_S";
    case JonGuiDataTimeFormats.JON_GUI_DATA_TIME_FORMAT_Y_m_D_H_M_S:
      return "JON_GUI_DATA_TIME_FORMAT_Y_m_D_H_M_S";
    case JonGuiDataTimeFormats.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export enum JonGuiDataRotaryDirection {
  JON_GUI_DATA_ROTARY_DIRECTION_UNSPECIFIED = 0,
  JON_GUI_DATA_ROTARY_DIRECTION_CLOCKWISE = 1,
  JON_GUI_DATA_ROTARY_DIRECTION_COUNTER_CLOCKWISE = 2,
  UNRECOGNIZED = -1,
}

export function jonGuiDataRotaryDirectionFromJSON(object: any): JonGuiDataRotaryDirection {
  switch (object) {
    case 0:
    case "JON_GUI_DATA_ROTARY_DIRECTION_UNSPECIFIED":
      return JonGuiDataRotaryDirection.JON_GUI_DATA_ROTARY_DIRECTION_UNSPECIFIED;
    case 1:
    case "JON_GUI_DATA_ROTARY_DIRECTION_CLOCKWISE":
      return JonGuiDataRotaryDirection.JON_GUI_DATA_ROTARY_DIRECTION_CLOCKWISE;
    case 2:
    case "JON_GUI_DATA_ROTARY_DIRECTION_COUNTER_CLOCKWISE":
      return JonGuiDataRotaryDirection.JON_GUI_DATA_ROTARY_DIRECTION_COUNTER_CLOCKWISE;
    case -1:
    case "UNRECOGNIZED":
    default:
      return JonGuiDataRotaryDirection.UNRECOGNIZED;
  }
}

export function jonGuiDataRotaryDirectionToJSON(object: JonGuiDataRotaryDirection): string {
  switch (object) {
    case JonGuiDataRotaryDirection.JON_GUI_DATA_ROTARY_DIRECTION_UNSPECIFIED:
      return "JON_GUI_DATA_ROTARY_DIRECTION_UNSPECIFIED";
    case JonGuiDataRotaryDirection.JON_GUI_DATA_ROTARY_DIRECTION_CLOCKWISE:
      return "JON_GUI_DATA_ROTARY_DIRECTION_CLOCKWISE";
    case JonGuiDataRotaryDirection.JON_GUI_DATA_ROTARY_DIRECTION_COUNTER_CLOCKWISE:
      return "JON_GUI_DATA_ROTARY_DIRECTION_COUNTER_CLOCKWISE";
    case JonGuiDataRotaryDirection.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export enum JonGuiDataLrfScanModes {
  JON_GUI_DATA_LRF_SCAN_MODE_UNSPECIFIED = 0,
  JON_GUI_DATA_LRF_SCAN_MODE_1_HZ_CONTINUOUS = 1,
  JON_GUI_DATA_LRF_SCAN_MODE_4_HZ_CONTINUOUS = 2,
  JON_GUI_DATA_LRF_SCAN_MODE_10_HZ_CONTINUOUS = 3,
  JON_GUI_DATA_LRF_SCAN_MODE_20_HZ_CONTINUOUS = 4,
  JON_GUI_DATA_LRF_SCAN_MODE_100_HZ_CONTINUOUS = 5,
  JON_GUI_DATA_LRF_SCAN_MODE_200_HZ_CONTINUOUS = 6,
  UNRECOGNIZED = -1,
}

export function jonGuiDataLrfScanModesFromJSON(object: any): JonGuiDataLrfScanModes {
  switch (object) {
    case 0:
    case "JON_GUI_DATA_LRF_SCAN_MODE_UNSPECIFIED":
      return JonGuiDataLrfScanModes.JON_GUI_DATA_LRF_SCAN_MODE_UNSPECIFIED;
    case 1:
    case "JON_GUI_DATA_LRF_SCAN_MODE_1_HZ_CONTINUOUS":
      return JonGuiDataLrfScanModes.JON_GUI_DATA_LRF_SCAN_MODE_1_HZ_CONTINUOUS;
    case 2:
    case "JON_GUI_DATA_LRF_SCAN_MODE_4_HZ_CONTINUOUS":
      return JonGuiDataLrfScanModes.JON_GUI_DATA_LRF_SCAN_MODE_4_HZ_CONTINUOUS;
    case 3:
    case "JON_GUI_DATA_LRF_SCAN_MODE_10_HZ_CONTINUOUS":
      return JonGuiDataLrfScanModes.JON_GUI_DATA_LRF_SCAN_MODE_10_HZ_CONTINUOUS;
    case 4:
    case "JON_GUI_DATA_LRF_SCAN_MODE_20_HZ_CONTINUOUS":
      return JonGuiDataLrfScanModes.JON_GUI_DATA_LRF_SCAN_MODE_20_HZ_CONTINUOUS;
    case 5:
    case "JON_GUI_DATA_LRF_SCAN_MODE_100_HZ_CONTINUOUS":
      return JonGuiDataLrfScanModes.JON_GUI_DATA_LRF_SCAN_MODE_100_HZ_CONTINUOUS;
    case 6:
    case "JON_GUI_DATA_LRF_SCAN_MODE_200_HZ_CONTINUOUS":
      return JonGuiDataLrfScanModes.JON_GUI_DATA_LRF_SCAN_MODE_200_HZ_CONTINUOUS;
    case -1:
    case "UNRECOGNIZED":
    default:
      return JonGuiDataLrfScanModes.UNRECOGNIZED;
  }
}

export function jonGuiDataLrfScanModesToJSON(object: JonGuiDataLrfScanModes): string {
  switch (object) {
    case JonGuiDataLrfScanModes.JON_GUI_DATA_LRF_SCAN_MODE_UNSPECIFIED:
      return "JON_GUI_DATA_LRF_SCAN_MODE_UNSPECIFIED";
    case JonGuiDataLrfScanModes.JON_GUI_DATA_LRF_SCAN_MODE_1_HZ_CONTINUOUS:
      return "JON_GUI_DATA_LRF_SCAN_MODE_1_HZ_CONTINUOUS";
    case JonGuiDataLrfScanModes.JON_GUI_DATA_LRF_SCAN_MODE_4_HZ_CONTINUOUS:
      return "JON_GUI_DATA_LRF_SCAN_MODE_4_HZ_CONTINUOUS";
    case JonGuiDataLrfScanModes.JON_GUI_DATA_LRF_SCAN_MODE_10_HZ_CONTINUOUS:
      return "JON_GUI_DATA_LRF_SCAN_MODE_10_HZ_CONTINUOUS";
    case JonGuiDataLrfScanModes.JON_GUI_DATA_LRF_SCAN_MODE_20_HZ_CONTINUOUS:
      return "JON_GUI_DATA_LRF_SCAN_MODE_20_HZ_CONTINUOUS";
    case JonGuiDataLrfScanModes.JON_GUI_DATA_LRF_SCAN_MODE_100_HZ_CONTINUOUS:
      return "JON_GUI_DATA_LRF_SCAN_MODE_100_HZ_CONTINUOUS";
    case JonGuiDataLrfScanModes.JON_GUI_DATA_LRF_SCAN_MODE_200_HZ_CONTINUOUS:
      return "JON_GUI_DATA_LRF_SCAN_MODE_200_HZ_CONTINUOUS";
    case JonGuiDataLrfScanModes.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export enum JonGuiDatatLrfLaserPointerModes {
  JON_GUI_DATA_LRF_LASER_POINTER_MODE_UNSPECIFIED = 0,
  JON_GUI_DATA_LRF_LASER_POINTER_MODE_OFF = 1,
  JON_GUI_DATA_LRF_LASER_POINTER_MODE_ON_1 = 2,
  JON_GUI_DATA_LRF_LASER_POINTER_MODE_ON_2 = 3,
  UNRECOGNIZED = -1,
}

export function jonGuiDatatLrfLaserPointerModesFromJSON(object: any): JonGuiDatatLrfLaserPointerModes {
  switch (object) {
    case 0:
    case "JON_GUI_DATA_LRF_LASER_POINTER_MODE_UNSPECIFIED":
      return JonGuiDatatLrfLaserPointerModes.JON_GUI_DATA_LRF_LASER_POINTER_MODE_UNSPECIFIED;
    case 1:
    case "JON_GUI_DATA_LRF_LASER_POINTER_MODE_OFF":
      return JonGuiDatatLrfLaserPointerModes.JON_GUI_DATA_LRF_LASER_POINTER_MODE_OFF;
    case 2:
    case "JON_GUI_DATA_LRF_LASER_POINTER_MODE_ON_1":
      return JonGuiDatatLrfLaserPointerModes.JON_GUI_DATA_LRF_LASER_POINTER_MODE_ON_1;
    case 3:
    case "JON_GUI_DATA_LRF_LASER_POINTER_MODE_ON_2":
      return JonGuiDatatLrfLaserPointerModes.JON_GUI_DATA_LRF_LASER_POINTER_MODE_ON_2;
    case -1:
    case "UNRECOGNIZED":
    default:
      return JonGuiDatatLrfLaserPointerModes.UNRECOGNIZED;
  }
}

export function jonGuiDatatLrfLaserPointerModesToJSON(object: JonGuiDatatLrfLaserPointerModes): string {
  switch (object) {
    case JonGuiDatatLrfLaserPointerModes.JON_GUI_DATA_LRF_LASER_POINTER_MODE_UNSPECIFIED:
      return "JON_GUI_DATA_LRF_LASER_POINTER_MODE_UNSPECIFIED";
    case JonGuiDatatLrfLaserPointerModes.JON_GUI_DATA_LRF_LASER_POINTER_MODE_OFF:
      return "JON_GUI_DATA_LRF_LASER_POINTER_MODE_OFF";
    case JonGuiDatatLrfLaserPointerModes.JON_GUI_DATA_LRF_LASER_POINTER_MODE_ON_1:
      return "JON_GUI_DATA_LRF_LASER_POINTER_MODE_ON_1";
    case JonGuiDatatLrfLaserPointerModes.JON_GUI_DATA_LRF_LASER_POINTER_MODE_ON_2:
      return "JON_GUI_DATA_LRF_LASER_POINTER_MODE_ON_2";
    case JonGuiDatatLrfLaserPointerModes.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export enum JonGuiDataCompassCalibrateStatus {
  JON_GUI_DATA_COMPASS_CALIBRATE_STATUS_UNSPECIFIED = 0,
  JON_GUI_DATA_COMPASS_CALIBRATE_STATUS_NOT_CALIBRATING = 1,
  JON_GUI_DATA_COMPASS_CALIBRATE_STATUS_CALIBRATING_SHORT = 2,
  JON_GUI_DATA_COMPASS_CALIBRATE_STATUS_CALIBRATING_LONG = 3,
  JON_GUI_DATA_COMPASS_CALIBRATE_STATUS_FINISHED = 4,
  JON_GUI_DATA_COMPASS_CALIBRATE_STATUS_ERROR = 5,
  UNRECOGNIZED = -1,
}

export function jonGuiDataCompassCalibrateStatusFromJSON(object: any): JonGuiDataCompassCalibrateStatus {
  switch (object) {
    case 0:
    case "JON_GUI_DATA_COMPASS_CALIBRATE_STATUS_UNSPECIFIED":
      return JonGuiDataCompassCalibrateStatus.JON_GUI_DATA_COMPASS_CALIBRATE_STATUS_UNSPECIFIED;
    case 1:
    case "JON_GUI_DATA_COMPASS_CALIBRATE_STATUS_NOT_CALIBRATING":
      return JonGuiDataCompassCalibrateStatus.JON_GUI_DATA_COMPASS_CALIBRATE_STATUS_NOT_CALIBRATING;
    case 2:
    case "JON_GUI_DATA_COMPASS_CALIBRATE_STATUS_CALIBRATING_SHORT":
      return JonGuiDataCompassCalibrateStatus.JON_GUI_DATA_COMPASS_CALIBRATE_STATUS_CALIBRATING_SHORT;
    case 3:
    case "JON_GUI_DATA_COMPASS_CALIBRATE_STATUS_CALIBRATING_LONG":
      return JonGuiDataCompassCalibrateStatus.JON_GUI_DATA_COMPASS_CALIBRATE_STATUS_CALIBRATING_LONG;
    case 4:
    case "JON_GUI_DATA_COMPASS_CALIBRATE_STATUS_FINISHED":
      return JonGuiDataCompassCalibrateStatus.JON_GUI_DATA_COMPASS_CALIBRATE_STATUS_FINISHED;
    case 5:
    case "JON_GUI_DATA_COMPASS_CALIBRATE_STATUS_ERROR":
      return JonGuiDataCompassCalibrateStatus.JON_GUI_DATA_COMPASS_CALIBRATE_STATUS_ERROR;
    case -1:
    case "UNRECOGNIZED":
    default:
      return JonGuiDataCompassCalibrateStatus.UNRECOGNIZED;
  }
}

export function jonGuiDataCompassCalibrateStatusToJSON(object: JonGuiDataCompassCalibrateStatus): string {
  switch (object) {
    case JonGuiDataCompassCalibrateStatus.JON_GUI_DATA_COMPASS_CALIBRATE_STATUS_UNSPECIFIED:
      return "JON_GUI_DATA_COMPASS_CALIBRATE_STATUS_UNSPECIFIED";
    case JonGuiDataCompassCalibrateStatus.JON_GUI_DATA_COMPASS_CALIBRATE_STATUS_NOT_CALIBRATING:
      return "JON_GUI_DATA_COMPASS_CALIBRATE_STATUS_NOT_CALIBRATING";
    case JonGuiDataCompassCalibrateStatus.JON_GUI_DATA_COMPASS_CALIBRATE_STATUS_CALIBRATING_SHORT:
      return "JON_GUI_DATA_COMPASS_CALIBRATE_STATUS_CALIBRATING_SHORT";
    case JonGuiDataCompassCalibrateStatus.JON_GUI_DATA_COMPASS_CALIBRATE_STATUS_CALIBRATING_LONG:
      return "JON_GUI_DATA_COMPASS_CALIBRATE_STATUS_CALIBRATING_LONG";
    case JonGuiDataCompassCalibrateStatus.JON_GUI_DATA_COMPASS_CALIBRATE_STATUS_FINISHED:
      return "JON_GUI_DATA_COMPASS_CALIBRATE_STATUS_FINISHED";
    case JonGuiDataCompassCalibrateStatus.JON_GUI_DATA_COMPASS_CALIBRATE_STATUS_ERROR:
      return "JON_GUI_DATA_COMPASS_CALIBRATE_STATUS_ERROR";
    case JonGuiDataCompassCalibrateStatus.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export enum JonGuiDataRotaryMode {
  JON_GUI_DATA_ROTARY_MODE_UNSPECIFIED = 0,
  JON_GUI_DATA_ROTARY_MODE_INITIALIZATION = 1,
  JON_GUI_DATA_ROTARY_MODE_SPEED = 2,
  JON_GUI_DATA_ROTARY_MODE_POSITION = 3,
  JON_GUI_DATA_ROTARY_MODE_STABILIZATION = 4,
  JON_GUI_DATA_ROTARY_MODE_TARGETING = 5,
  JON_GUI_DATA_ROTARY_MODE_VIDEO_TRACKER = 6,
  UNRECOGNIZED = -1,
}

export function jonGuiDataRotaryModeFromJSON(object: any): JonGuiDataRotaryMode {
  switch (object) {
    case 0:
    case "JON_GUI_DATA_ROTARY_MODE_UNSPECIFIED":
      return JonGuiDataRotaryMode.JON_GUI_DATA_ROTARY_MODE_UNSPECIFIED;
    case 1:
    case "JON_GUI_DATA_ROTARY_MODE_INITIALIZATION":
      return JonGuiDataRotaryMode.JON_GUI_DATA_ROTARY_MODE_INITIALIZATION;
    case 2:
    case "JON_GUI_DATA_ROTARY_MODE_SPEED":
      return JonGuiDataRotaryMode.JON_GUI_DATA_ROTARY_MODE_SPEED;
    case 3:
    case "JON_GUI_DATA_ROTARY_MODE_POSITION":
      return JonGuiDataRotaryMode.JON_GUI_DATA_ROTARY_MODE_POSITION;
    case 4:
    case "JON_GUI_DATA_ROTARY_MODE_STABILIZATION":
      return JonGuiDataRotaryMode.JON_GUI_DATA_ROTARY_MODE_STABILIZATION;
    case 5:
    case "JON_GUI_DATA_ROTARY_MODE_TARGETING":
      return JonGuiDataRotaryMode.JON_GUI_DATA_ROTARY_MODE_TARGETING;
    case 6:
    case "JON_GUI_DATA_ROTARY_MODE_VIDEO_TRACKER":
      return JonGuiDataRotaryMode.JON_GUI_DATA_ROTARY_MODE_VIDEO_TRACKER;
    case -1:
    case "UNRECOGNIZED":
    default:
      return JonGuiDataRotaryMode.UNRECOGNIZED;
  }
}

export function jonGuiDataRotaryModeToJSON(object: JonGuiDataRotaryMode): string {
  switch (object) {
    case JonGuiDataRotaryMode.JON_GUI_DATA_ROTARY_MODE_UNSPECIFIED:
      return "JON_GUI_DATA_ROTARY_MODE_UNSPECIFIED";
    case JonGuiDataRotaryMode.JON_GUI_DATA_ROTARY_MODE_INITIALIZATION:
      return "JON_GUI_DATA_ROTARY_MODE_INITIALIZATION";
    case JonGuiDataRotaryMode.JON_GUI_DATA_ROTARY_MODE_SPEED:
      return "JON_GUI_DATA_ROTARY_MODE_SPEED";
    case JonGuiDataRotaryMode.JON_GUI_DATA_ROTARY_MODE_POSITION:
      return "JON_GUI_DATA_ROTARY_MODE_POSITION";
    case JonGuiDataRotaryMode.JON_GUI_DATA_ROTARY_MODE_STABILIZATION:
      return "JON_GUI_DATA_ROTARY_MODE_STABILIZATION";
    case JonGuiDataRotaryMode.JON_GUI_DATA_ROTARY_MODE_TARGETING:
      return "JON_GUI_DATA_ROTARY_MODE_TARGETING";
    case JonGuiDataRotaryMode.JON_GUI_DATA_ROTARY_MODE_VIDEO_TRACKER:
      return "JON_GUI_DATA_ROTARY_MODE_VIDEO_TRACKER";
    case JonGuiDataRotaryMode.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export enum JonGuiDataVideoChannel {
  JON_GUI_DATA_VIDEO_CHANNEL_UNSPECIFIED = 0,
  JON_GUI_DATA_VIDEO_CHANNEL_HEAT = 1,
  JON_GUI_DATA_VIDEO_CHANNEL_DAY = 2,
  UNRECOGNIZED = -1,
}

export function jonGuiDataVideoChannelFromJSON(object: any): JonGuiDataVideoChannel {
  switch (object) {
    case 0:
    case "JON_GUI_DATA_VIDEO_CHANNEL_UNSPECIFIED":
      return JonGuiDataVideoChannel.JON_GUI_DATA_VIDEO_CHANNEL_UNSPECIFIED;
    case 1:
    case "JON_GUI_DATA_VIDEO_CHANNEL_HEAT":
      return JonGuiDataVideoChannel.JON_GUI_DATA_VIDEO_CHANNEL_HEAT;
    case 2:
    case "JON_GUI_DATA_VIDEO_CHANNEL_DAY":
      return JonGuiDataVideoChannel.JON_GUI_DATA_VIDEO_CHANNEL_DAY;
    case -1:
    case "UNRECOGNIZED":
    default:
      return JonGuiDataVideoChannel.UNRECOGNIZED;
  }
}

export function jonGuiDataVideoChannelToJSON(object: JonGuiDataVideoChannel): string {
  switch (object) {
    case JonGuiDataVideoChannel.JON_GUI_DATA_VIDEO_CHANNEL_UNSPECIFIED:
      return "JON_GUI_DATA_VIDEO_CHANNEL_UNSPECIFIED";
    case JonGuiDataVideoChannel.JON_GUI_DATA_VIDEO_CHANNEL_HEAT:
      return "JON_GUI_DATA_VIDEO_CHANNEL_HEAT";
    case JonGuiDataVideoChannel.JON_GUI_DATA_VIDEO_CHANNEL_DAY:
      return "JON_GUI_DATA_VIDEO_CHANNEL_DAY";
    case JonGuiDataVideoChannel.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export enum JonGuiDataRecOsdScreen {
  JON_GUI_DATA_REC_OSD_SCREEN_UNSPECIFIED = 0,
  JON_GUI_DATA_REC_OSD_SCREEN_MAIN = 1,
  JON_GUI_DATA_REC_OSD_SCREEN_LRF_MEASURE = 2,
  JON_GUI_DATA_REC_OSD_SCREEN_LRF_RESULT = 3,
  JON_GUI_DATA_REC_OSD_SCREEN_LRF_RESULT_SIMPLIFIED = 4,
  UNRECOGNIZED = -1,
}

export function jonGuiDataRecOsdScreenFromJSON(object: any): JonGuiDataRecOsdScreen {
  switch (object) {
    case 0:
    case "JON_GUI_DATA_REC_OSD_SCREEN_UNSPECIFIED":
      return JonGuiDataRecOsdScreen.JON_GUI_DATA_REC_OSD_SCREEN_UNSPECIFIED;
    case 1:
    case "JON_GUI_DATA_REC_OSD_SCREEN_MAIN":
      return JonGuiDataRecOsdScreen.JON_GUI_DATA_REC_OSD_SCREEN_MAIN;
    case 2:
    case "JON_GUI_DATA_REC_OSD_SCREEN_LRF_MEASURE":
      return JonGuiDataRecOsdScreen.JON_GUI_DATA_REC_OSD_SCREEN_LRF_MEASURE;
    case 3:
    case "JON_GUI_DATA_REC_OSD_SCREEN_LRF_RESULT":
      return JonGuiDataRecOsdScreen.JON_GUI_DATA_REC_OSD_SCREEN_LRF_RESULT;
    case 4:
    case "JON_GUI_DATA_REC_OSD_SCREEN_LRF_RESULT_SIMPLIFIED":
      return JonGuiDataRecOsdScreen.JON_GUI_DATA_REC_OSD_SCREEN_LRF_RESULT_SIMPLIFIED;
    case -1:
    case "UNRECOGNIZED":
    default:
      return JonGuiDataRecOsdScreen.UNRECOGNIZED;
  }
}

export function jonGuiDataRecOsdScreenToJSON(object: JonGuiDataRecOsdScreen): string {
  switch (object) {
    case JonGuiDataRecOsdScreen.JON_GUI_DATA_REC_OSD_SCREEN_UNSPECIFIED:
      return "JON_GUI_DATA_REC_OSD_SCREEN_UNSPECIFIED";
    case JonGuiDataRecOsdScreen.JON_GUI_DATA_REC_OSD_SCREEN_MAIN:
      return "JON_GUI_DATA_REC_OSD_SCREEN_MAIN";
    case JonGuiDataRecOsdScreen.JON_GUI_DATA_REC_OSD_SCREEN_LRF_MEASURE:
      return "JON_GUI_DATA_REC_OSD_SCREEN_LRF_MEASURE";
    case JonGuiDataRecOsdScreen.JON_GUI_DATA_REC_OSD_SCREEN_LRF_RESULT:
      return "JON_GUI_DATA_REC_OSD_SCREEN_LRF_RESULT";
    case JonGuiDataRecOsdScreen.JON_GUI_DATA_REC_OSD_SCREEN_LRF_RESULT_SIMPLIFIED:
      return "JON_GUI_DATA_REC_OSD_SCREEN_LRF_RESULT_SIMPLIFIED";
    case JonGuiDataRecOsdScreen.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export enum JonGuiDataFxModeDay {
  JON_GUI_DATA_FX_MODE_DAY_DEFAULT = 0,
  JON_GUI_DATA_FX_MODE_DAY_A = 1,
  JON_GUI_DATA_FX_MODE_DAY_B = 2,
  JON_GUI_DATA_FX_MODE_DAY_C = 3,
  JON_GUI_DATA_FX_MODE_DAY_D = 4,
  JON_GUI_DATA_FX_MODE_DAY_E = 5,
  JON_GUI_DATA_FX_MODE_DAY_F = 6,
  UNRECOGNIZED = -1,
}

export function jonGuiDataFxModeDayFromJSON(object: any): JonGuiDataFxModeDay {
  switch (object) {
    case 0:
    case "JON_GUI_DATA_FX_MODE_DAY_DEFAULT":
      return JonGuiDataFxModeDay.JON_GUI_DATA_FX_MODE_DAY_DEFAULT;
    case 1:
    case "JON_GUI_DATA_FX_MODE_DAY_A":
      return JonGuiDataFxModeDay.JON_GUI_DATA_FX_MODE_DAY_A;
    case 2:
    case "JON_GUI_DATA_FX_MODE_DAY_B":
      return JonGuiDataFxModeDay.JON_GUI_DATA_FX_MODE_DAY_B;
    case 3:
    case "JON_GUI_DATA_FX_MODE_DAY_C":
      return JonGuiDataFxModeDay.JON_GUI_DATA_FX_MODE_DAY_C;
    case 4:
    case "JON_GUI_DATA_FX_MODE_DAY_D":
      return JonGuiDataFxModeDay.JON_GUI_DATA_FX_MODE_DAY_D;
    case 5:
    case "JON_GUI_DATA_FX_MODE_DAY_E":
      return JonGuiDataFxModeDay.JON_GUI_DATA_FX_MODE_DAY_E;
    case 6:
    case "JON_GUI_DATA_FX_MODE_DAY_F":
      return JonGuiDataFxModeDay.JON_GUI_DATA_FX_MODE_DAY_F;
    case -1:
    case "UNRECOGNIZED":
    default:
      return JonGuiDataFxModeDay.UNRECOGNIZED;
  }
}

export function jonGuiDataFxModeDayToJSON(object: JonGuiDataFxModeDay): string {
  switch (object) {
    case JonGuiDataFxModeDay.JON_GUI_DATA_FX_MODE_DAY_DEFAULT:
      return "JON_GUI_DATA_FX_MODE_DAY_DEFAULT";
    case JonGuiDataFxModeDay.JON_GUI_DATA_FX_MODE_DAY_A:
      return "JON_GUI_DATA_FX_MODE_DAY_A";
    case JonGuiDataFxModeDay.JON_GUI_DATA_FX_MODE_DAY_B:
      return "JON_GUI_DATA_FX_MODE_DAY_B";
    case JonGuiDataFxModeDay.JON_GUI_DATA_FX_MODE_DAY_C:
      return "JON_GUI_DATA_FX_MODE_DAY_C";
    case JonGuiDataFxModeDay.JON_GUI_DATA_FX_MODE_DAY_D:
      return "JON_GUI_DATA_FX_MODE_DAY_D";
    case JonGuiDataFxModeDay.JON_GUI_DATA_FX_MODE_DAY_E:
      return "JON_GUI_DATA_FX_MODE_DAY_E";
    case JonGuiDataFxModeDay.JON_GUI_DATA_FX_MODE_DAY_F:
      return "JON_GUI_DATA_FX_MODE_DAY_F";
    case JonGuiDataFxModeDay.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export enum JonGuiDataFxModeHeat {
  JON_GUI_DATA_FX_MODE_HEAT_DEFAULT = 0,
  JON_GUI_DATA_FX_MODE_HEAT_A = 1,
  JON_GUI_DATA_FX_MODE_HEAT_B = 2,
  JON_GUI_DATA_FX_MODE_HEAT_C = 3,
  JON_GUI_DATA_FX_MODE_HEAT_D = 4,
  JON_GUI_DATA_FX_MODE_HEAT_E = 5,
  JON_GUI_DATA_FX_MODE_HEAT_F = 6,
  UNRECOGNIZED = -1,
}

export function jonGuiDataFxModeHeatFromJSON(object: any): JonGuiDataFxModeHeat {
  switch (object) {
    case 0:
    case "JON_GUI_DATA_FX_MODE_HEAT_DEFAULT":
      return JonGuiDataFxModeHeat.JON_GUI_DATA_FX_MODE_HEAT_DEFAULT;
    case 1:
    case "JON_GUI_DATA_FX_MODE_HEAT_A":
      return JonGuiDataFxModeHeat.JON_GUI_DATA_FX_MODE_HEAT_A;
    case 2:
    case "JON_GUI_DATA_FX_MODE_HEAT_B":
      return JonGuiDataFxModeHeat.JON_GUI_DATA_FX_MODE_HEAT_B;
    case 3:
    case "JON_GUI_DATA_FX_MODE_HEAT_C":
      return JonGuiDataFxModeHeat.JON_GUI_DATA_FX_MODE_HEAT_C;
    case 4:
    case "JON_GUI_DATA_FX_MODE_HEAT_D":
      return JonGuiDataFxModeHeat.JON_GUI_DATA_FX_MODE_HEAT_D;
    case 5:
    case "JON_GUI_DATA_FX_MODE_HEAT_E":
      return JonGuiDataFxModeHeat.JON_GUI_DATA_FX_MODE_HEAT_E;
    case 6:
    case "JON_GUI_DATA_FX_MODE_HEAT_F":
      return JonGuiDataFxModeHeat.JON_GUI_DATA_FX_MODE_HEAT_F;
    case -1:
    case "UNRECOGNIZED":
    default:
      return JonGuiDataFxModeHeat.UNRECOGNIZED;
  }
}

export function jonGuiDataFxModeHeatToJSON(object: JonGuiDataFxModeHeat): string {
  switch (object) {
    case JonGuiDataFxModeHeat.JON_GUI_DATA_FX_MODE_HEAT_DEFAULT:
      return "JON_GUI_DATA_FX_MODE_HEAT_DEFAULT";
    case JonGuiDataFxModeHeat.JON_GUI_DATA_FX_MODE_HEAT_A:
      return "JON_GUI_DATA_FX_MODE_HEAT_A";
    case JonGuiDataFxModeHeat.JON_GUI_DATA_FX_MODE_HEAT_B:
      return "JON_GUI_DATA_FX_MODE_HEAT_B";
    case JonGuiDataFxModeHeat.JON_GUI_DATA_FX_MODE_HEAT_C:
      return "JON_GUI_DATA_FX_MODE_HEAT_C";
    case JonGuiDataFxModeHeat.JON_GUI_DATA_FX_MODE_HEAT_D:
      return "JON_GUI_DATA_FX_MODE_HEAT_D";
    case JonGuiDataFxModeHeat.JON_GUI_DATA_FX_MODE_HEAT_E:
      return "JON_GUI_DATA_FX_MODE_HEAT_E";
    case JonGuiDataFxModeHeat.JON_GUI_DATA_FX_MODE_HEAT_F:
      return "JON_GUI_DATA_FX_MODE_HEAT_F";
    case JonGuiDataFxModeHeat.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export enum JonGuiDataSystemLocalizations {
  JON_GUI_DATA_SYSTEM_LOCALIZATION_UNSPECIFIED = 0,
  JON_GUI_DATA_SYSTEM_LOCALIZATION_EN = 1,
  JON_GUI_DATA_SYSTEM_LOCALIZATION_UA = 2,
  JON_GUI_DATA_SYSTEM_LOCALIZATION_AR = 3,
  JON_GUI_DATA_SYSTEM_LOCALIZATION_CS = 4,
  UNRECOGNIZED = -1,
}

export function jonGuiDataSystemLocalizationsFromJSON(object: any): JonGuiDataSystemLocalizations {
  switch (object) {
    case 0:
    case "JON_GUI_DATA_SYSTEM_LOCALIZATION_UNSPECIFIED":
      return JonGuiDataSystemLocalizations.JON_GUI_DATA_SYSTEM_LOCALIZATION_UNSPECIFIED;
    case 1:
    case "JON_GUI_DATA_SYSTEM_LOCALIZATION_EN":
      return JonGuiDataSystemLocalizations.JON_GUI_DATA_SYSTEM_LOCALIZATION_EN;
    case 2:
    case "JON_GUI_DATA_SYSTEM_LOCALIZATION_UA":
      return JonGuiDataSystemLocalizations.JON_GUI_DATA_SYSTEM_LOCALIZATION_UA;
    case 3:
    case "JON_GUI_DATA_SYSTEM_LOCALIZATION_AR":
      return JonGuiDataSystemLocalizations.JON_GUI_DATA_SYSTEM_LOCALIZATION_AR;
    case 4:
    case "JON_GUI_DATA_SYSTEM_LOCALIZATION_CS":
      return JonGuiDataSystemLocalizations.JON_GUI_DATA_SYSTEM_LOCALIZATION_CS;
    case -1:
    case "UNRECOGNIZED":
    default:
      return JonGuiDataSystemLocalizations.UNRECOGNIZED;
  }
}

export function jonGuiDataSystemLocalizationsToJSON(object: JonGuiDataSystemLocalizations): string {
  switch (object) {
    case JonGuiDataSystemLocalizations.JON_GUI_DATA_SYSTEM_LOCALIZATION_UNSPECIFIED:
      return "JON_GUI_DATA_SYSTEM_LOCALIZATION_UNSPECIFIED";
    case JonGuiDataSystemLocalizations.JON_GUI_DATA_SYSTEM_LOCALIZATION_EN:
      return "JON_GUI_DATA_SYSTEM_LOCALIZATION_EN";
    case JonGuiDataSystemLocalizations.JON_GUI_DATA_SYSTEM_LOCALIZATION_UA:
      return "JON_GUI_DATA_SYSTEM_LOCALIZATION_UA";
    case JonGuiDataSystemLocalizations.JON_GUI_DATA_SYSTEM_LOCALIZATION_AR:
      return "JON_GUI_DATA_SYSTEM_LOCALIZATION_AR";
    case JonGuiDataSystemLocalizations.JON_GUI_DATA_SYSTEM_LOCALIZATION_CS:
      return "JON_GUI_DATA_SYSTEM_LOCALIZATION_CS";
    case JonGuiDataSystemLocalizations.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export enum JonGuiDataClientType {
  JON_GUI_DATA_CLIENT_TYPE_UNSPECIFIED = 0,
  JON_GUI_DATA_CLIENT_TYPE_INTERNAL_CV = 1,
  JON_GUI_DATA_CLIENT_TYPE_LOCAL_NETWORK = 2,
  JON_GUI_DATA_CLIENT_TYPE_CERTIFICATE_PROTECTED = 3,
  JON_GUI_DATA_CLIENT_TYPE_LIRA = 4,
  UNRECOGNIZED = -1,
}

export function jonGuiDataClientTypeFromJSON(object: any): JonGuiDataClientType {
  switch (object) {
    case 0:
    case "JON_GUI_DATA_CLIENT_TYPE_UNSPECIFIED":
      return JonGuiDataClientType.JON_GUI_DATA_CLIENT_TYPE_UNSPECIFIED;
    case 1:
    case "JON_GUI_DATA_CLIENT_TYPE_INTERNAL_CV":
      return JonGuiDataClientType.JON_GUI_DATA_CLIENT_TYPE_INTERNAL_CV;
    case 2:
    case "JON_GUI_DATA_CLIENT_TYPE_LOCAL_NETWORK":
      return JonGuiDataClientType.JON_GUI_DATA_CLIENT_TYPE_LOCAL_NETWORK;
    case 3:
    case "JON_GUI_DATA_CLIENT_TYPE_CERTIFICATE_PROTECTED":
      return JonGuiDataClientType.JON_GUI_DATA_CLIENT_TYPE_CERTIFICATE_PROTECTED;
    case 4:
    case "JON_GUI_DATA_CLIENT_TYPE_LIRA":
      return JonGuiDataClientType.JON_GUI_DATA_CLIENT_TYPE_LIRA;
    case -1:
    case "UNRECOGNIZED":
    default:
      return JonGuiDataClientType.UNRECOGNIZED;
  }
}

export function jonGuiDataClientTypeToJSON(object: JonGuiDataClientType): string {
  switch (object) {
    case JonGuiDataClientType.JON_GUI_DATA_CLIENT_TYPE_UNSPECIFIED:
      return "JON_GUI_DATA_CLIENT_TYPE_UNSPECIFIED";
    case JonGuiDataClientType.JON_GUI_DATA_CLIENT_TYPE_INTERNAL_CV:
      return "JON_GUI_DATA_CLIENT_TYPE_INTERNAL_CV";
    case JonGuiDataClientType.JON_GUI_DATA_CLIENT_TYPE_LOCAL_NETWORK:
      return "JON_GUI_DATA_CLIENT_TYPE_LOCAL_NETWORK";
    case JonGuiDataClientType.JON_GUI_DATA_CLIENT_TYPE_CERTIFICATE_PROTECTED:
      return "JON_GUI_DATA_CLIENT_TYPE_CERTIFICATE_PROTECTED";
    case JonGuiDataClientType.JON_GUI_DATA_CLIENT_TYPE_LIRA:
      return "JON_GUI_DATA_CLIENT_TYPE_LIRA";
    case JonGuiDataClientType.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export interface JonGuiDataMeteo {
  temperature: number;
  humidity: number;
  pressure: number;
}

function createBaseJonGuiDataMeteo(): JonGuiDataMeteo {
  return { temperature: 0, humidity: 0, pressure: 0 };
}

export const JonGuiDataMeteo: MessageFns<JonGuiDataMeteo> = {
  encode(message: JonGuiDataMeteo, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.temperature !== 0) {
      writer.uint32(9).double(message.temperature);
    }
    if (message.humidity !== 0) {
      writer.uint32(17).double(message.humidity);
    }
    if (message.pressure !== 0) {
      writer.uint32(25).double(message.pressure);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): JonGuiDataMeteo {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    const end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseJonGuiDataMeteo();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1: {
          if (tag !== 9) {
            break;
          }

          message.temperature = reader.double();
          continue;
        }
        case 2: {
          if (tag !== 17) {
            break;
          }

          message.humidity = reader.double();
          continue;
        }
        case 3: {
          if (tag !== 25) {
            break;
          }

          message.pressure = reader.double();
          continue;
        }
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): JonGuiDataMeteo {
    return {
      temperature: isSet(object.temperature) ? globalThis.Number(object.temperature) : 0,
      humidity: isSet(object.humidity) ? globalThis.Number(object.humidity) : 0,
      pressure: isSet(object.pressure) ? globalThis.Number(object.pressure) : 0,
    };
  },

  toJSON(message: JonGuiDataMeteo): unknown {
    const obj: any = {};
    if (message.temperature !== 0) {
      obj.temperature = message.temperature;
    }
    if (message.humidity !== 0) {
      obj.humidity = message.humidity;
    }
    if (message.pressure !== 0) {
      obj.pressure = message.pressure;
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<JonGuiDataMeteo>, I>>(base?: I): JonGuiDataMeteo {
    return JonGuiDataMeteo.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<JonGuiDataMeteo>, I>>(object: I): JonGuiDataMeteo {
    const message = createBaseJonGuiDataMeteo();
    message.temperature = object.temperature ?? 0;
    message.humidity = object.humidity ?? 0;
    message.pressure = object.pressure ?? 0;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

type KeysOfUnion<T> = T extends T ? keyof T : never;
type Exact<P, I extends P> = P extends Builtin ? P
  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;
  fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;
}
